acoes <- read_csv("IPO anterior a 2010.csv")
acoes <- acoes %>%
filter(Acoes != "SIMH3"
& Acoes != "GOLL3"
& Acoes != "CL3"
& Acoes != "CLCS3"
& Acoes != "VBBR3"
& Acoes != "KBLN3")
for(i in 1:nrow(acoes)){
acoes[i, 1] <- paste(acoes[i,1],".SA", sep = "")
}
stock <- tq_get(acoes[1], get = "stock.prices", from = "2010-01-01", to = "2022-01-01")
dividendos <- tq_get(acoes[1], get = "dividends", from = "2010-01-01", to = "2022-01-01")
stock2 <- tq_get(acoes[1], get = "stock.prices", from = "2010-01-01", to = "2017-01-01")
dividendos2 <- tq_get(acoes[1], get = "dividends", from = "2010-01-01", to = "2017-01-01")
acao <- left_join(stock2, dividendos2, by = c("Acoes", "date"))
acao_filtrada <- acao %>%
group_by(Acoes) %>%
summarize(media_volume = mean(volume, na.rm = TRUE),
media_dividendos = mean(value, na.rm = TRUE)) %>%
filter(media_volume >= 10000) %>%
arrange(desc(media_volume))
acoes_fechamento <- stock %>%
select(date, Acoes, close) %>%
pivot_wider(names_from = Acoes, values_from = close, values_fn = list(close = median)) %>%
arrange(date)
acoes_fechamento <- acoes_fechamento %>%
select(date, acao_filtrada$Acoes)
######## Limpeza de Dados ########
datas_validas <- acoes_fechamento%>%
select(date)
indicadores_validos <- inner_join(datas_validas, indicadores, by = "date")
write_csv(indicadores_validos, "Indicadores_validos.csv")
######## Modelo ########
indicadoresteste <- indicadores_validos %>%
as.data.frame() %>%
as.numeric()
write_csv(indicadores_validos, "IndicadoresValidos.csv")
acoes_fechamento <- acoes_fechamento %>%
as.data.frame()
write_csv(acoes_fechamento, "acoesfechamento.csv")
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
processa.matriz <- function(v, w, x, y , z){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
}
v = (3, 1, 4, 1, 2)
w = (0, 2, 7, 3, 4)
x = (1, 5, 9, 8, 3)
v = c(3, 1, 4, 1, 2)
w = c(0, 2, 7, 3, 4)
x = c(1, 5, 9, 8, 3)
y = c(2, 6, 4, 2, 1)
z = c(3, 7, 6, 3, 0)
processa.matriz <- function(v, w, x, y , z){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
return(m)
}
processa.matriz(v, w, x, y ,z)
processa.matriz <- function(v, w, x, y , z, n){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m <- 2 * m
return(m)
}
processa.matriz(v, w, x, y ,z, 2)
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m
t(m)
processa.matriz <- function(v, w, x, y , z, n){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m <- 2 * m
m <- m %*% t(m)
return(m)
}
processa.matriz(v, w, x, y ,z, 2)
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m
m[3:4, 3:5]
processa.matriz <- function(v, w, x, y , z, n, lin_inicio, lin_final, col_inicio, col_final, limite){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m <- 2 * m
m <- m %*% t(m)
if(intervalo == "aberto"){
media <- mean(m[(lin_inicio + 1):(lin_final - 1), (col_inicio + 1):(col_final - 1)])
}
else{
media <- mean(m[lin_inicio:lin_final, col_inicio:col_final])
}
return(m)
}
processa.matriz(v, w, x, y ,z, 2, 2, 5, 1, 4, "aberto")
processa.matriz <- function(v, w, x, y , z, n, lin_inicio, lin_final, col_inicio, col_final, intervalo){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m <- 2 * m
m <- m %*% t(m)
if(intervalo == "aberto"){
media <- mean(m[(lin_inicio + 1):(lin_final - 1), (col_inicio + 1):(col_final - 1)])
}
else{
media <- mean(m[lin_inicio:lin_final, col_inicio:col_final])
}
return(m)
}
processa.matriz(v, w, x, y ,z, 2, 2, 5, 1, 4, "aberto")
processa.matriz <- function(v, w, x, y , z, n, lin_inicio, lin_final, col_inicio, col_final, intervalo){
m <- matrix(c(v, w, x, y, z), nrow = 5, byrow = TRUE)
m <- 2 * m
m <- m %*% t(m)
if(intervalo == "aberto"){
media <- mean(m[(lin_inicio + 1):(lin_final - 1), (col_inicio + 1):(col_final - 1)])
}
else{
media <- mean(m[lin_inicio:lin_final, col_inicio:col_final])
}
return(media)
}
processa.matriz(v, w, x, y ,z, 2, 2, 5, 1, 4, "aberto")
var <- 2
var1 = 2
var
4 + var
var == 2
var == 4
if(var == 2){print("Ele é igual a 2")}
var = 4
if(var == 2){print("Ele é igual a 2")}
calcula.indice <- function(x){
n <- length(x)
indice <- n * ((sum(x^2) - sum(x))/(sum(x)^2 - sum(x)))
return(indice)
}
x = c(20, 18, 22, 23, 15, 21, 22, 24, 16, 14, 16, 25, 24, 23, 20, 19, 19, 18)
calcula.indice(x)
for(i in 1:20){
print(i)
}
for(i in 1:20){
print(x[i])
}
for(i in 1:length(x)){
print(x[i])
}
for(i in 1:length(x)){
print(x[i] * 2)
}
m
for(lin in 1:nrow(m)){
for(col in 1:ncol(m)){
m[i, j] <- m[i,j] + 4
}
}
for(lin in 1:nrow(m)){
for(col in 1:ncol(m)){
m[lin, col] <- m[lin, col] + 4
}
}
m
fatorial <- function(n){
if(n == 1){
return(1)
}
else{
return(n * fatorial(n - 1))
}
}
fatorial(5)
fatorial <- function(n){
if(n == 1){
return(1)
}
else{
print(n * fatorial(n - 1))
return(n * fatorial(n - 1))
}
}
fatorial(5)
2 %%2
3 %% 2
exponenciacao.recursiva <- function(m, n){
if(n == 0){
return(1)
}
else{
if(n > 0 & n %% 2 == 0){
return((exponenciacao.recursiva(m, n/2))^2)
}
else if(n > 0 & n %% 2 != 0){
return(m * exponenciacao.recursiva(m, n - 1))
}
}
}
exponenciacao.recursiva(4, 3)
calcula.valor <- function(x, n){
for(i in 0:n - 1){
resultado = resultado + (x^i)/fatorial(i)
}
return(resultado)
}
calcula.valor(5, 100)
calcula.valor <- function(x, n){
resultado <- 0
for(i in 0:n - 1){
resultado = resultado + (x^i)/fatorial(i)
}
return(resultado)
}
calcula.valor <- function(x, n){
resultado <- 0
for(i in 0:n - 1){
resultado = resultado + (x^i)/fatorial(i)
}
return(resultado)
}
calcula.valor(5, 100)
gc()
calcula.valor(5, 100)
calcula.valor <- function(x, n){
resultado <- 0
for(i in 0:n - 1){
resultado = resultado + (x^i)/fatorial(i)
}
return(resultado)
}
cacula.valor(5,100)
calcula.valor(5, 100)
if(x == 2){print(erro)}
feira <- data.frame(data = c(1, 2, 3, 4), maca = c(1, 5, 6, 7), pera = c(4, 9, 3, 5), peixe = c(3, 7, 2, 1))
feira
mean(feira[2, ])
vetor <- feira[2, ]
vetor
sum(vetor)
mean(vetor)
feira
feira$maca
feria$peixe
feira$peixe
m <- matrix(1:9, nrow = 3)
m
m[,2] + 2
calcula.f <- function(x, y, z){
retorno <- x^4 * y - 5 * x^3 * z^2 - 2
return(retorno)
}
calcula.f(4, 5, 1)
calcula.f(1, 2, 3)
calcula.g <- function(x, y){
retorno <- 0.9 * x^3 - 2 * x^2 + 6 * y
return(retorno)
}
calcula.g(1,2,3)
calcula.g(1,2)
calcula.g(9,2)
getwd(0)
getwd()
setwd("C:/Users/Andre & Diego/Documents")
library(tidyverse)
read_csv("mergeado_1iniciais.csv")
merge <- read_csv("mergeado_1iniciais.csv")
View(merge)
merge <- merge %>% mutate(indice_atendimento = 100 - indice_sem_atend)
merge_filtrado <- merge %>% filter(indice_atendimento >= 50)
View(merge_filtrado)
reg <- lm(formula = ideb ~ indice_atendimento, data = merge)
reg
reg <- lm(formula = ideb ~ indice_atendimento + pib_pc_2013, data = merge)
reg
reg <- lm(formula = ideb ~ indice_atendimento + log(pib_pc_2013), data = merge)
reg
summary(reg)
sumarry <- summary(reg)
View(sumarry)
summary <- summary(reg)
summary$coefficients
T_valor_PIB <- summary[3, 3]
T_valor_PIB <- summary$coefficients[3, 3]
T_valor_PIB
qt(0.975, 999)
T_valor_PIB <- summary$coefficients[3, 3]
T_valor_PIB
ponto_critico <- qt(0.975, 999)
reg1 <- lm(formula = ideb ~ indice_atendimento, data = merge)
summary(reg1)
View(reg1)
summary1 <- summary(reg1)
View(summary1)
summary1$r.squared
R2 <- summary1$r.squared
R2
merge <- merge %>% mutate(sujeira <- case_when(indice_atend <= 20 ~ 1,
indice_atend > 20 ~ 0))
merge <- merge %>% mutate(sujeira = case_when(indice_atendimento <= 20 ~ 1,
indice_atendimento > 20 ~ 0))
View(merge
if()
View(merge)
knitr::opts_chunk$set(echo = TRUE)
start_date = "2009-12-01"
remove_end_date <- function(df){
if("end_date" %in% colnames(df)){
df <- df %>%
select(-end_date)
return(df)
}else{
return(df)
}
}
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
library(tidyverse)
library(janitor)
library(rbcb)
library(lubridate)
library(zoo)
library(RcppRoll)
start_date = "2009-12-01"
remove_end_date <- function(df){
if("end_date" %in% colnames(df)){
df <- df %>%
select(-end_date)
return(df)
}else{
return(df)
}
}
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
library(tidyverse)
library(janitor)
library(rbcb)
library(lubridate)
library(zoo)
library(RcppRoll)
start_date = "2009-12-01"
remove_end_date <- function(df){
if("end_date" %in% colnames(df)){
df <- df %>%
select(-end_date)
return(df)
}else{
return(df)
}
}
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
start_date = "2009-12-01"
remove_end_date <- function(df){
if("end_date" %in% colnames(df)){
df <- df %>%
select(-end_date)
return(df)
}else{
return(df)
}
}
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
getwd()
setwd("C:/Users/Andre & Diego/Documents/GitHub/EconData-Analytics/")
start_date = "2009-12-01"
remove_end_date <- function(df){
if("end_date" %in% colnames(df)){
df <- df %>%
select(-end_date)
return(df)
}else{
return(df)
}
}
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
inflacao <- rbcb::get_series(c("ipca" = 433,
"ipca_alimentacao_e_bebidas" = 1635,
"ipca_habitacao" = 1636,
"ipca_artigos_de_residencia" = 1637,
"ipca_vestuario" = 1638,
"ipca_transportes" = 1639,
"ipca_comunicacao" = 1640,
"ipca_saude_e_cuidados_pessoais" = 1641,
"ipca_despesas_pessoais" = 1642,
"ipca_educacao" = 1643,
"ipca_comercializaveis" = 4447,
"ipca_nao_comercializaveis" = 4448,
"ipca_monitorados" = 4449,
"ipca_nucleo_medias_aparadas(suavizado)" = 4466,
"ipca_nucleo_medias_aparadas(sem_suavizado)" = 11426,
"ipca_nao_duraveis" = 10841,
"ipca_semi_duraveis" = 10842,
"ipca_duraveis" = 10843,
"ipca_servicos" = 10844,
"ipca_livres" = 11428,
"ipca_industriais" = 27863,
"ipca_alimentacao_no_domicilio" = 27864,
"indice_de_difusao" = 21379), start_date) %>%
reshape::merge_recurse() %>%
remove_end_date()
getwd()
View(inflacao)
